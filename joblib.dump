import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import LogisticRegression
from sklearn.pipeline import make_pipeline
from sklearn.metrics import accuracy_score

# Load the dataset
file_path = '/Users/avinashbabu/Downloads/moviedataset.csv'  # Update this path to the correct path of your CSV file
df = pd.read_csv(file_path)

# Preparing the dataset
X = df['review']  # The review text
y = df['sentiment'].map({'positive': 1, 'negative': 0})  # Convert sentiment labels from strings to numeric (binary)

# Split the dataset into training and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=42)

# Text preprocessing and occurrence counting
vectorizer = TfidfVectorizer(stop_words='english', ngram_range=(1,2), min_df=3, max_df=0.9, max_features=5000)

# Pipeline definition: Vectorizer => Classifier
text_clf = make_pipeline(vectorizer, LogisticRegression(max_iter=1000))

# Train the model
text_clf.fit(X_train, y_train)

# Evaluate the model on the test set
predicted = text_clf.predict(X_test)
accuracy = accuracy_score(y_test, predicted)
print(f"Model Accuracy: {accuracy:.4f}")